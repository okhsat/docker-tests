services:
  mysql-cluster-1:
    build: .
    # Give it a cool name (mysql-cluster-1 is pretty clear, right?)
    container_name: mysql-cluster-1
    # Extra commands to configure the node
    # command: --ssl-mode=REQUIRED
    # Set some environment variables for passwords and database details
    # Remember to replace these with your own strong passwords!
    environment:
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
        - ./db-data1:/var/lib/mysql  
    # Map the container port (3306) to your host machine's port (also 3307)
    # This lets you access the master server from your machine
    ports:
      - "3307:3306"
    networks:
      - mysql-net

  mysql-cluster-2:
    build: .
    # Another cool name (can you guess what it is?)
    container_name: mysql-cluster-2
    # Similar commands and environment variables
    # command: --ssl-mode=REQUIRED
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Same password for both
    volumes:
        - ./db-data2:/var/lib/mysql
    # Map the container port (3306) to a different host machine port (3308 in this case)
    ports:
      - "3308:3306"
    networks:
      - mysql-net

  mysql-cluster-3:
    build: .
    # Another cool name (can you guess what it is?)
    container_name: mysql-cluster-3
    # Similar commands and environment variables
    # command: --ssl-mode=REQUIRED
    environment:
      MYSQL_ROOT_PASSWORD: root_password # Same password for both
    volumes:
        - ./db-data3:/var/lib/mysql
    # Map the container port (3306) to a different host machine port (3309 in this case)
    ports:
      - "3309:3306"
    networks:
      - mysql-net      

volumes:
  db-data1:
    driver: local
  db-data2:
    driver: local
  db-data3:
    driver: local

networks:
  mysql-net:
    driver: bridge